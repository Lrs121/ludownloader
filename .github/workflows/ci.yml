name: Rust

on:
  push:
    branches: [ "develop", "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: info

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable

      - name: Build downloader
        working-directory: ./backend/downloader
        run: cargo build --verbose

      - name: Build server
        working-directory: ./backend/server
        run: cargo build --verbose

  fmt:
    name: fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Enforce formatting
        run: cargo fmt --check
        working-directory: ./backend

  clippy:
    name: clippy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Clippy lints
        run: cargo clippy -- -D warnings
        working-directory: ./backend

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
    
      - name: Test downloader
        working-directory: ./backend/downloader
        run: cargo test --verbose -- --nocapture

      - name: Test server
        working-directory: ./backend/server
        run: cargo test --verbose -- --nocapture

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: true
          tags: lurian/ludownloader

